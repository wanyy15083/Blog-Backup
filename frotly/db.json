{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.css","path":"main.css","modified":1,"renderable":1},{"_id":"source/assets/img/favicon.ico","path":"assets/img/favicon.ico","modified":1,"renderable":0},{"_id":"source/assets/blogImg/frotly.jpg","path":"assets/blogImg/frotly.jpg","modified":1,"renderable":0},{"_id":"themes/yilia/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.svg","path":"fonts/default-skin.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.svg","path":"fonts/tooltip.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.js","path":"main.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1481542121352},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1481542121353},{"_id":"themes/yilia/README.md","hash":"4751bbbfe4ea5f2acd3d864de893e19c5a3d6878","modified":1481542121353},{"_id":"themes/yilia/_config.yml","hash":"3a01191bad16f2b7d3ccef213fd4dfe8d61caefd","modified":1481542121354},{"_id":"themes/yilia/package.json","hash":"3133f9792e28ae20a16f27fdec682e051dbf21c0","modified":1481542121370},{"_id":"themes/yilia/webpack.config.js","hash":"1cc836dc29277fd211233849867fd58bc64a0d3b","modified":1481542121437},{"_id":"source/_posts/demo.md","hash":"670ad21fabd07e07fa8fe92621054fc32678b0dd","modified":1481542121301},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1481542121302},{"_id":"source/_posts/代码的坏味道.md","hash":"6f1c20b30bd0b4405aa5614dd9ed4d48cd1e4475","modified":1481545858862},{"_id":"source/_posts/初识重构.md","hash":"4778e81c6a132dc34d71521bab77fcc813cae5fd","modified":1481545954797},{"_id":"source/_posts/重构手法.md","hash":"c32afc1fd075ce8be788841fa4c11283fbf071e8","modified":1481555036640},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1481542121354},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1481542121355},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1481542121355},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1481542121356},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1481542121356},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1481542121356},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1481542121356},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1481542121367},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1481542121367},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1481542121368},{"_id":"themes/yilia/layout/layout.ejs","hash":"6759bdc3646d6c03f9dbc7abffcb2b5e4522c724","modified":1481542121368},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481542121368},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481542121369},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1481542121369},{"_id":"themes/yilia/source/main.css","hash":"cee78af2f34e5b8572aec058c8db4b6fdc88d6d5","modified":1481542121435},{"_id":"source/assets/img/favicon.ico","hash":"5f85ff4d5cdbdbcb21813c3543cb2a21c3b3cf64","modified":1481542121304},{"_id":"source/assets/blogImg/frotly.jpg","hash":"f58a44e4fdb1f96743263aa23d2888b394506d3e","modified":1481542121303},{"_id":"themes/yilia/source/fonts/iconfont.eot","hash":"bc7decf4e37c3df6bd81d617d951f83327faa742","modified":1481542121431},{"_id":"themes/yilia/source/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1481542121431},{"_id":"themes/yilia/source/fonts/iconfont.svg","hash":"2a3f2f4773f2af59d4ef37b13aed39a5bcd7e018","modified":1481542121432},{"_id":"themes/yilia/source/fonts/iconfont.ttf","hash":"d1d9497f08d75c36af6b1a4e5ee7a82e912da18e","modified":1481542121433},{"_id":"themes/yilia/source/fonts/iconfont.woff","hash":"27523a9a8009e1599f6bb84e456d4b6506e62dd3","modified":1481542121433},{"_id":"themes/yilia/source/fonts/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1481542121434},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1481542121371},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1481542121371},{"_id":"themes/yilia/source-src/css/archive-inner.scss","hash":"9503a730c0d7a9d8f9fdc81cd32b474a6d94ec57","modified":1481542121371},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"8a0ae8ee6af8df3f215f1cd4ecc10145a5b92cf0","modified":1481542121372},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"4115c4518cca3f5cf461018aa7a7321138d017cc","modified":1481542121372},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"7802304b0f2d302f0652236e35a5096003ebd0d1","modified":1481542121373},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"9069371dcc65eee63081a21e8a56a9f3dbf64c08","modified":1481542121373},{"_id":"themes/yilia/source-src/css/article.scss","hash":"133cd0a816cd4406415c2cf1f042f9039e65c805","modified":1481542121374},{"_id":"themes/yilia/source-src/css/duoshuo.scss","hash":"8eb9678e2f88da64436d75e5fde5c84bd52f7e17","modified":1481542121378},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"33ca561397b9a7e6ddfb7101959a0192a8431b72","modified":1481542121378},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"b8629b441b7bb1b1f4dcaeaf77df0dae5d101dad","modified":1481542121383},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1481542121382},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"0267e2febaef284cf319235435643232fdeee0c9","modified":1481542121383},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0940b74a29101c97573efd8e492ee39cef5e2dc8","modified":1481542121407},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2534ff49f57b0cab095a538781c6ea3369199bc6","modified":1481542121407},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1481542121382},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"facd3d41bc9b2d2c6134fc0fbd379a3b0c18476b","modified":1481542121408},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d5ead4f0787e72dea76a1e2bc114edc82e744451","modified":1481542121408},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1481542121409},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1481542121409},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1481542121409},{"_id":"themes/yilia/source-src/css/social.scss","hash":"920e6617c5053f09026ee512b3751f284698bf45","modified":1481542121410},{"_id":"themes/yilia/source-src/css/share.scss","hash":"c165c65bb82e1f736b9a87b5ca86c8aacb4d66ab","modified":1481542121410},{"_id":"themes/yilia/source-src/css/switch.scss","hash":"a4c1872aff9509441f4d723801a9b3f7db161a41","modified":1481542121411},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1481542121411},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"b109bf8726067b612ff38117f7541d1ea34b97bf","modified":1481542121411},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"86108d02e99a9c9fb3a8d8a9ac29599a8eeebde2","modified":1481542121412},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1481542121412},{"_id":"themes/yilia/source-src/js/archive-inner.js","hash":"b7639058dc1043ec1a8c87f46b7d1acccac57105","modified":1481542121413},{"_id":"themes/yilia/source-src/js/browser.js","hash":"bb2e9a1ddcb34372e6cbdd9e9ecfd3dc87623451","modified":1481542121413},{"_id":"themes/yilia/source-src/js/fix-page.js","hash":"940b580d6243461788c28bdd09b8049642a90e13","modified":1481542121414},{"_id":"themes/yilia/source-src/js/jquery.lazyload.js","hash":"2258765aa8b606cc095900daedf2666c46383de8","modified":1481542121419},{"_id":"themes/yilia/source-src/js/main.js","hash":"f68b906d3abfae2ae6e740e6d10492d32fb276dd","modified":1481542121419},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"d5abbdaf16fd4c8ee9ee802cfd4b6aeb34073893","modified":1481542121420},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1481542121421},{"_id":"themes/yilia/source-src/js/qrcode.js","hash":"4b1c4a83543eb3aa0a4485db5594e5b634a47a38","modified":1481542121420},{"_id":"themes/yilia/source-src/js/share.js","hash":"0973e1cc84f80b4a1dd31bd41cf0e9ebaf1cb15d","modified":1481542121421},{"_id":"themes/yilia/source-src/js/tags.js","hash":"a8da9d6e3031c960f9859ef519233ad3ab65d0ef","modified":1481542121422},{"_id":"themes/yilia/source-src/js/tools.js","hash":"eb36f563b76e9431dc109856a78383ed11763a84","modified":1481542121422},{"_id":"themes/yilia/source-src/js/util.js","hash":"cf91a9c9c973e2ee05d50a24a11c411c36264238","modified":1481542121422},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"df39fafb3639dbcffbf80503f6e9bfee011ba328","modified":1481542121423},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe-ui-default.js","hash":"05fa305ec449deb59b04e2ae118a8e3ec5250e1b","modified":1481542121426},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe-ui-default.min.js","hash":"852a1fcdaacf66754090fc6d432013c5c657ab80","modified":1481542121427},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.min.js","hash":"39806b9989eaecbc3e032da8de77f69e0c9ff779","modified":1481542121429},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.scss","hash":"b80bb4efe9ac36a566f037fb6984af8b486a9d5c","modified":1481542121430},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"327978b8d1d34885bac46edef59e5e0883a8d324","modified":1481542121358},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1481542121358},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1481542121358},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"c3cb4160b3f9cd817f2d829807ed9d3488f345ed","modified":1481542121359},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1481542121359},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1481542121360},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"0d5f8d8f4c1aefcf34f816cb8ebda41a8926b547","modified":1481542121360},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"63d53c26f6ef7d2b4d96de3a2d3d7bd385f8dfda","modified":1481542121360},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"67263ff5e8a7feb9349005074bf5b45cafe32859","modified":1481542121361},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1481542121361},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"d263cd48b0f246872a2bd8f192ffb839805f27bc","modified":1481542121362},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"fe0fd2f17b14d3fedfef43b6acadead38183b2a2","modified":1481542121366},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1481542121367},{"_id":"themes/yilia/source/main.js","hash":"3ec824e855fe1346e90443900302a9b1bffcdaa4","modified":1481542121437},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.js","hash":"b616337e586eaa5afcf5bb77c927bd1b09a25524","modified":1481542121428},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1481542121375},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1481542121376},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"4d2d5331a206768681add5e779789c58e9835f94","modified":1481542121376},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1481542121377},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc7decf4e37c3df6bd81d617d951f83327faa742","modified":1481542121379},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"2a3f2f4773f2af59d4ef37b13aed39a5bcd7e018","modified":1481542121380},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"d1d9497f08d75c36af6b1a4e5ee7a82e912da18e","modified":1481542121381},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"27523a9a8009e1599f6bb84e456d4b6506e62dd3","modified":1481542121381},{"_id":"themes/yilia/source-src/css/img/black-scales.png","hash":"243ea748d016704922ccfc0b6c18d97472c27bff","modified":1481542121385},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1481542121385},{"_id":"themes/yilia/source-src/css/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1481542121386},{"_id":"themes/yilia/source-src/css/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1481542121387},{"_id":"themes/yilia/source-src/css/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1481542121386},{"_id":"themes/yilia/source-src/css/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1481542121387},{"_id":"themes/yilia/source-src/css/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1481542121390},{"_id":"themes/yilia/source-src/css/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1481542121390},{"_id":"themes/yilia/source-src/css/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1481542121391},{"_id":"themes/yilia/source-src/css/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1481542121403},{"_id":"themes/yilia/source-src/css/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1481542121404},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1481542121404},{"_id":"themes/yilia/source-src/css/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1481542121405},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1481542121405},{"_id":"themes/yilia/source-src/css/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1481542121405},{"_id":"themes/yilia/source-src/css/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1481542121406},{"_id":"themes/yilia/source-src/css/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1481542121406},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"8381a373d85daee53cc3247467ffa4db58ae1b88","modified":1481542121374},{"_id":"themes/yilia/source-src/css/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1481542121387},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1481542121424},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.scss","hash":"3f8f8062d24cce2158d3c02bdfc56c000f1a1f9b","modified":1481542121425},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1481542121425},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1481542121426},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"24f8f7fe3836f4852fdeecb0b844f3c14fd746e8","modified":1481542121362},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1481542121363},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1481542121364},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1481542121364},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"0f768c01b7aae94e6daf0a8d8c2186592c27be15","modified":1481542121365},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"e6edf173da77fb851fc067a481a897ad934cc4ca","modified":1481542121365},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1481542121366},{"_id":"themes/yilia/source-src/css/img/black-paper.png","hash":"a180d3109a5cb6b9b9aa60d81730446ebe275473","modified":1481542121384},{"_id":"themes/yilia/source-src/js/jquery.js","hash":"aa6ccf721c4e76921abda46c120772d364e5b285","modified":1481542121418},{"_id":"public/2016/12/12/代码的坏味道/index.html","hash":"6654654e36ef82445fe5f055173861ce9b03d99a","modified":1481555167885},{"_id":"public/2016/12/12/初识重构/index.html","hash":"23aa24e7cfccbc03204cb4a988b7b3f987513e48","modified":1481555167885},{"_id":"public/2016/12/12/hello-world/index.html","hash":"79bcb2a17dd7316698f36a90e105e4ebc0fa88b8","modified":1481555167886},{"_id":"public/2016/11/30/demo/index.html","hash":"d8fa5f2d809d5a546f4dc758edff571aab871039","modified":1481555167886},{"_id":"public/archives/index.html","hash":"ead374ee13382baab3d9b29094d854b344ab7892","modified":1481555167886},{"_id":"public/archives/2016/index.html","hash":"4b5b69f616159d4ad4f5a9e9a99f1be24ec9aa50","modified":1481555167886},{"_id":"public/archives/2016/11/index.html","hash":"f1d3a1db32e0a592cda9d62c93bb85d72abfec3c","modified":1481555167886},{"_id":"public/archives/2016/12/index.html","hash":"795a9ea308cdebc8c0b8dd783a2c3372b6222024","modified":1481555167886},{"_id":"public/tags/demo/index.html","hash":"97d6b1e14173b3d445855f8db925e2e63d71281e","modified":1481555167886},{"_id":"public/2016/12/12/重构手法/index.html","hash":"f9c0044e028ff21e8a807d36f68c1488dcf0c5d3","modified":1481555167886},{"_id":"public/index.html","hash":"2e59bf6fdc6aa6249d90bd3e134a2aedc30d94b7","modified":1481555167887},{"_id":"public/assets/img/favicon.ico","hash":"5f85ff4d5cdbdbcb21813c3543cb2a21c3b3cf64","modified":1481555167904},{"_id":"public/assets/blogImg/frotly.jpg","hash":"f58a44e4fdb1f96743263aa23d2888b394506d3e","modified":1481555167904},{"_id":"public/fonts/iconfont.eot","hash":"bc7decf4e37c3df6bd81d617d951f83327faa742","modified":1481555167906},{"_id":"public/fonts/iconfont.svg","hash":"2a3f2f4773f2af59d4ef37b13aed39a5bcd7e018","modified":1481555167906},{"_id":"public/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1481555167906},{"_id":"public/fonts/iconfont.ttf","hash":"d1d9497f08d75c36af6b1a4e5ee7a82e912da18e","modified":1481555167907},{"_id":"public/fonts/iconfont.woff","hash":"27523a9a8009e1599f6bb84e456d4b6506e62dd3","modified":1481555167911},{"_id":"public/fonts/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1481555167911},{"_id":"public/main.css","hash":"cee78af2f34e5b8572aec058c8db4b6fdc88d6d5","modified":1481555167942},{"_id":"public/main.js","hash":"9b65612638edd96ffed8d3e3819f7bae491be9ed","modified":1481555167942}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"demo","date":"2016-11-30T02:58:29.000Z","_content":"#### 第一步\n    这是一个晴朗的天空\n\n#### 第二步\n    怎么突然下起了雨","source":"_posts/demo.md","raw":"---\ntitle: demo\ndate: 2016-11-30 10:58:29\ntags: demo\n---\n#### 第一步\n    这是一个晴朗的天空\n\n#### 第二步\n    怎么突然下起了雨","slug":"demo","published":1,"updated":"2016-12-12T11:28:41.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwm7oy6p00008su9ulmje7np","content":"<h4 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h4><pre><code>这是一个晴朗的天空\n</code></pre><h4 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h4><pre><code>怎么突然下起了雨\n</code></pre>","excerpt":"","more":"<h4 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h4><pre><code>这是一个晴朗的天空\n</code></pre><h4 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h4><pre><code>怎么突然下起了雨\n</code></pre>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-12-12T11:28:41.302Z","updated":"2016-12-12T11:28:41.302Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwm7oy7f00018su9niit7f3h","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"'代码的坏味道'","date":"2016-12-12T11:51:33.000Z","_content":"\n* Duplicated Code (重复代码) \n* Long Method （过长函数）\n* Large Class (过大的类)\n* Long Parameter List （过长参数列）\n* Divergent Change (发散式变化)\n* Shotgun Surgery (散弹式修改)\n* Feature Envy （依恋情结）\n* Data Clumps （数据泥团）\n* Primitive Obsession （基本类型偏执）\n* Switch Statements （switch惊悚现身）\n* Parallel Inheritance Hierarchies （平行集成体系）\n* Lazy Class （冗赘类）\n* Speculative Generality （夸夸其谈未来性）\n* Temporary Field （令人迷惑的暂时字段）\n* Message Chains （过度耦合的消息链）\n* Middle Man （中间人）\n* Inappropriate Intimacy （狎昵关系）\n* Alternative Classes with Different Interfaces （异曲同工的类）\n* Incomplete Library Class （不完美的类库）\n* Data Class （纯雅的数据类）\n* Refused Bequest （被拒绝的馈赠）\n* Comments （过多的注释）\n","source":"_posts/代码的坏味道.md","raw":"---\ntitle: '''代码的坏味道'''\ndate: 2016-12-12 19:51:33\ntags:\n---\n\n* Duplicated Code (重复代码) \n* Long Method （过长函数）\n* Large Class (过大的类)\n* Long Parameter List （过长参数列）\n* Divergent Change (发散式变化)\n* Shotgun Surgery (散弹式修改)\n* Feature Envy （依恋情结）\n* Data Clumps （数据泥团）\n* Primitive Obsession （基本类型偏执）\n* Switch Statements （switch惊悚现身）\n* Parallel Inheritance Hierarchies （平行集成体系）\n* Lazy Class （冗赘类）\n* Speculative Generality （夸夸其谈未来性）\n* Temporary Field （令人迷惑的暂时字段）\n* Message Chains （过度耦合的消息链）\n* Middle Man （中间人）\n* Inappropriate Intimacy （狎昵关系）\n* Alternative Classes with Different Interfaces （异曲同工的类）\n* Incomplete Library Class （不完美的类库）\n* Data Class （纯雅的数据类）\n* Refused Bequest （被拒绝的馈赠）\n* Comments （过多的注释）\n","slug":"代码的坏味道","published":1,"updated":"2016-12-12T12:30:58.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwm7oy8500038su9fecyrum2","content":"<ul>\n<li>Duplicated Code (重复代码) </li>\n<li>Long Method （过长函数）</li>\n<li>Large Class (过大的类)</li>\n<li>Long Parameter List （过长参数列）</li>\n<li>Divergent Change (发散式变化)</li>\n<li>Shotgun Surgery (散弹式修改)</li>\n<li>Feature Envy （依恋情结）</li>\n<li>Data Clumps （数据泥团）</li>\n<li>Primitive Obsession （基本类型偏执）</li>\n<li>Switch Statements （switch惊悚现身）</li>\n<li>Parallel Inheritance Hierarchies （平行集成体系）</li>\n<li>Lazy Class （冗赘类）</li>\n<li>Speculative Generality （夸夸其谈未来性）</li>\n<li>Temporary Field （令人迷惑的暂时字段）</li>\n<li>Message Chains （过度耦合的消息链）</li>\n<li>Middle Man （中间人）</li>\n<li>Inappropriate Intimacy （狎昵关系）</li>\n<li>Alternative Classes with Different Interfaces （异曲同工的类）</li>\n<li>Incomplete Library Class （不完美的类库）</li>\n<li>Data Class （纯雅的数据类）</li>\n<li>Refused Bequest （被拒绝的馈赠）</li>\n<li>Comments （过多的注释）</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>Duplicated Code (重复代码) </li>\n<li>Long Method （过长函数）</li>\n<li>Large Class (过大的类)</li>\n<li>Long Parameter List （过长参数列）</li>\n<li>Divergent Change (发散式变化)</li>\n<li>Shotgun Surgery (散弹式修改)</li>\n<li>Feature Envy （依恋情结）</li>\n<li>Data Clumps （数据泥团）</li>\n<li>Primitive Obsession （基本类型偏执）</li>\n<li>Switch Statements （switch惊悚现身）</li>\n<li>Parallel Inheritance Hierarchies （平行集成体系）</li>\n<li>Lazy Class （冗赘类）</li>\n<li>Speculative Generality （夸夸其谈未来性）</li>\n<li>Temporary Field （令人迷惑的暂时字段）</li>\n<li>Message Chains （过度耦合的消息链）</li>\n<li>Middle Man （中间人）</li>\n<li>Inappropriate Intimacy （狎昵关系）</li>\n<li>Alternative Classes with Different Interfaces （异曲同工的类）</li>\n<li>Incomplete Library Class （不完美的类库）</li>\n<li>Data Class （纯雅的数据类）</li>\n<li>Refused Bequest （被拒绝的馈赠）</li>\n<li>Comments （过多的注释）</li>\n</ul>\n"},{"_content":"## 一、重新组织函数\n---\n\n### Extract Method （提炼函数）\n* 过长函数，或需要注释才能让人理解用途的代码\n* 将这段代码放进一个独立函数中，并让函数名称解释该函数的用途。\n* 局部变量的处理\n\n### Inline Method （内联函数）\n* 函数内部代码和函数名称清晰易读，许多不合理的函数，函数之间委托\n* 在函数调用点插入函数本体，然后移除该函数\n\n### Inline Temp （内联临时变量）\n* 将所有对变量的引用动作，替换为对它赋值的那个表达式自身\n* 临时变量被赋予某个函数调用的返回值，妨碍了其他的重构手法\n\n### Replace Temp with Query （以查询取代临时变量）\n* 将这个表达式提炼到一个独立函数中。将这个临时变量的所有引用点替换为对新函数的调用。伺候，新函数就可以被其他函数使用。\n\n### Introduce Explaining Variable （引入解释性变量）\n* 将该复杂表达式（或其中一部分）的结果放进一个临时变量，以此变量名称来解释表达式用途\n* 在提取函数花费较大工作量时\n\n### 分解临时变量 \n* 针对每次赋值，创造一个独立、对应的临时变量\n* 临时变量承担多个责任\n\n### Remove Assignment to Parameters （移除对函数的赋值）\n* 以一个临时变量取代该参数的位置\n* Java按值传递\n\n### Replace Method with Method Object （以函数对象取代函数）\n* 将这个函数放进一个单独对象中，如此一来局部变量就成了对象中的字段。然后可以在同一个对象中将这个大型函数分解为多个小型函数\n* 将所以局部变量变成函数对象的字段，新对象可以创造新函数。\n\n### Substitute Algorithm （替换算法）\n* 将函数本体替换为另一个算法\n\n## 二、在对象之间搬移特性\n---\n\n### Move Method（搬移函数）\n* 在该函数最常引用的类中建立了一个有着类似行为的新函数。将就函数编程一个单纯的委托函数，或将就函数完全移除。\n* \n\n### Move Field （搬移字段）\n* 在目标类新建一个字段，修改源字段的所有用户，令他们改用新字段\n* \n\n### Extract Class （提炼类）\n* 建立一个新类，将相关的字段和函数从旧类搬移到新类\n\n### Inline Class（将类内联化）\n* 将这个类的所有特性搬移到另一个类中，然后移除原类\n\n### Hide Delegate （隐藏委托关系）\n* 在服务类上建立客户端所需的所有函数，用以委托关系\n\n### Remove Middle Man （移除中间人）\n* 让客户直接调用委托类\n\n### Introduce Foreign Method （引入外加函数）\n* 在客户类中建立一个函数，并以第一参数形式传入一个服务类实例\n\n### Introduce Local Extension （引入本地扩展）\n* 建立一个新类，使他包含这些额外函数。让这个扩展品成为源类的子类或包装类\n\n\n##　三、重新组织函数\n--- \n\n### Self Encapsulate Field （自封装字段）\n* 为这个字段建立取值/设置函数，并且只以这些函数来访问字段\n\n### Replace Data Value with Object（以对象取代数据值）\n* 将数据项变成对象\n\n### Change Value to Reference （将值对象改为引用对象）\n* 将这个值对象编程引用对象\n\n### Change Reference to Value （将引用对象改为值对象）\n* 将它变成一个值对象\n\n### Replace Array with Object（以对象取代数组）\n* 以对象取代数组。对数组中的每个元素，以一个字段来表示\n\n### Duplicate Observed Data（赋值被监视数据）\n* 该数据复制到一个领域对象中。建立一个Observer模式，用以同步领域对象和GUI对象内的重复数据\n\n### Change Unidirectional Association to Bidirectional（将单向关联改为双向关联）\n* 添加一个反向指针，并使修改函数能够同时更新两条连接\n\n### Change Bidirectional Association to Unidirectional（将双向关联改为单向关联）\n* 去除不必要的关联\n\n### Replace Magic Number with Symbolic Constant（以字面常量取代魔法数）\n* 创造一个常量，根据其意义为它命名，并将上述的字面数值替换为这个常量\n\n### Encapsulate Field（封装字段）\n* 将它声明为private，并提供相应的访问函数\n\n### Encapsulate Collection（封装集合）\n* 让这个函数返回该集合的一个只读副本，并在这个类中提供添加/移除集合元素的函数\n\n### Replace Record with Data Class（以数据类取代记录）\n* 为该记录创建一个哑数据的对象\n\n### Replace Type Code with  Class（以类取代类型码）\n* 以一个新的类替换该数值类型码\n\n### Replace Type Code with State/Strategy（以State/Strategy取代类型码）\n* 以状态对象取代状态吗\n\n### Replace Subclass with Fields（以字段取代子类）\n* 修改这些函数，使他们返回超类中的某个（新增）字段，然后销毁子类\n\n\n\n\n\n\n\n","source":"_posts/重构手法.md","raw":"## 一、重新组织函数\n---\n\n### Extract Method （提炼函数）\n* 过长函数，或需要注释才能让人理解用途的代码\n* 将这段代码放进一个独立函数中，并让函数名称解释该函数的用途。\n* 局部变量的处理\n\n### Inline Method （内联函数）\n* 函数内部代码和函数名称清晰易读，许多不合理的函数，函数之间委托\n* 在函数调用点插入函数本体，然后移除该函数\n\n### Inline Temp （内联临时变量）\n* 将所有对变量的引用动作，替换为对它赋值的那个表达式自身\n* 临时变量被赋予某个函数调用的返回值，妨碍了其他的重构手法\n\n### Replace Temp with Query （以查询取代临时变量）\n* 将这个表达式提炼到一个独立函数中。将这个临时变量的所有引用点替换为对新函数的调用。伺候，新函数就可以被其他函数使用。\n\n### Introduce Explaining Variable （引入解释性变量）\n* 将该复杂表达式（或其中一部分）的结果放进一个临时变量，以此变量名称来解释表达式用途\n* 在提取函数花费较大工作量时\n\n### 分解临时变量 \n* 针对每次赋值，创造一个独立、对应的临时变量\n* 临时变量承担多个责任\n\n### Remove Assignment to Parameters （移除对函数的赋值）\n* 以一个临时变量取代该参数的位置\n* Java按值传递\n\n### Replace Method with Method Object （以函数对象取代函数）\n* 将这个函数放进一个单独对象中，如此一来局部变量就成了对象中的字段。然后可以在同一个对象中将这个大型函数分解为多个小型函数\n* 将所以局部变量变成函数对象的字段，新对象可以创造新函数。\n\n### Substitute Algorithm （替换算法）\n* 将函数本体替换为另一个算法\n\n## 二、在对象之间搬移特性\n---\n\n### Move Method（搬移函数）\n* 在该函数最常引用的类中建立了一个有着类似行为的新函数。将就函数编程一个单纯的委托函数，或将就函数完全移除。\n* \n\n### Move Field （搬移字段）\n* 在目标类新建一个字段，修改源字段的所有用户，令他们改用新字段\n* \n\n### Extract Class （提炼类）\n* 建立一个新类，将相关的字段和函数从旧类搬移到新类\n\n### Inline Class（将类内联化）\n* 将这个类的所有特性搬移到另一个类中，然后移除原类\n\n### Hide Delegate （隐藏委托关系）\n* 在服务类上建立客户端所需的所有函数，用以委托关系\n\n### Remove Middle Man （移除中间人）\n* 让客户直接调用委托类\n\n### Introduce Foreign Method （引入外加函数）\n* 在客户类中建立一个函数，并以第一参数形式传入一个服务类实例\n\n### Introduce Local Extension （引入本地扩展）\n* 建立一个新类，使他包含这些额外函数。让这个扩展品成为源类的子类或包装类\n\n\n##　三、重新组织函数\n--- \n\n### Self Encapsulate Field （自封装字段）\n* 为这个字段建立取值/设置函数，并且只以这些函数来访问字段\n\n### Replace Data Value with Object（以对象取代数据值）\n* 将数据项变成对象\n\n### Change Value to Reference （将值对象改为引用对象）\n* 将这个值对象编程引用对象\n\n### Change Reference to Value （将引用对象改为值对象）\n* 将它变成一个值对象\n\n### Replace Array with Object（以对象取代数组）\n* 以对象取代数组。对数组中的每个元素，以一个字段来表示\n\n### Duplicate Observed Data（赋值被监视数据）\n* 该数据复制到一个领域对象中。建立一个Observer模式，用以同步领域对象和GUI对象内的重复数据\n\n### Change Unidirectional Association to Bidirectional（将单向关联改为双向关联）\n* 添加一个反向指针，并使修改函数能够同时更新两条连接\n\n### Change Bidirectional Association to Unidirectional（将双向关联改为单向关联）\n* 去除不必要的关联\n\n### Replace Magic Number with Symbolic Constant（以字面常量取代魔法数）\n* 创造一个常量，根据其意义为它命名，并将上述的字面数值替换为这个常量\n\n### Encapsulate Field（封装字段）\n* 将它声明为private，并提供相应的访问函数\n\n### Encapsulate Collection（封装集合）\n* 让这个函数返回该集合的一个只读副本，并在这个类中提供添加/移除集合元素的函数\n\n### Replace Record with Data Class（以数据类取代记录）\n* 为该记录创建一个哑数据的对象\n\n### Replace Type Code with  Class（以类取代类型码）\n* 以一个新的类替换该数值类型码\n\n### Replace Type Code with State/Strategy（以State/Strategy取代类型码）\n* 以状态对象取代状态吗\n\n### Replace Subclass with Fields（以字段取代子类）\n* 修改这些函数，使他们返回超类中的某个（新增）字段，然后销毁子类\n\n\n\n\n\n\n\n","slug":"重构手法","published":1,"date":"2016-12-12T12:34:39.843Z","updated":"2016-12-12T15:03:56.640Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwm7oy8h00048su9abld11k9","content":"<h2 id=\"一、重新组织函数\"><a href=\"#一、重新组织函数\" class=\"headerlink\" title=\"一、重新组织函数\"></a>一、重新组织函数</h2><hr>\n<h3 id=\"Extract-Method-（提炼函数）\"><a href=\"#Extract-Method-（提炼函数）\" class=\"headerlink\" title=\"Extract Method （提炼函数）\"></a>Extract Method （提炼函数）</h3><ul>\n<li>过长函数，或需要注释才能让人理解用途的代码</li>\n<li>将这段代码放进一个独立函数中，并让函数名称解释该函数的用途。</li>\n<li>局部变量的处理</li>\n</ul>\n<h3 id=\"Inline-Method-（内联函数）\"><a href=\"#Inline-Method-（内联函数）\" class=\"headerlink\" title=\"Inline Method （内联函数）\"></a>Inline Method （内联函数）</h3><ul>\n<li>函数内部代码和函数名称清晰易读，许多不合理的函数，函数之间委托</li>\n<li>在函数调用点插入函数本体，然后移除该函数</li>\n</ul>\n<h3 id=\"Inline-Temp-（内联临时变量）\"><a href=\"#Inline-Temp-（内联临时变量）\" class=\"headerlink\" title=\"Inline Temp （内联临时变量）\"></a>Inline Temp （内联临时变量）</h3><ul>\n<li>将所有对变量的引用动作，替换为对它赋值的那个表达式自身</li>\n<li>临时变量被赋予某个函数调用的返回值，妨碍了其他的重构手法</li>\n</ul>\n<h3 id=\"Replace-Temp-with-Query-（以查询取代临时变量）\"><a href=\"#Replace-Temp-with-Query-（以查询取代临时变量）\" class=\"headerlink\" title=\"Replace Temp with Query （以查询取代临时变量）\"></a>Replace Temp with Query （以查询取代临时变量）</h3><ul>\n<li>将这个表达式提炼到一个独立函数中。将这个临时变量的所有引用点替换为对新函数的调用。伺候，新函数就可以被其他函数使用。</li>\n</ul>\n<h3 id=\"Introduce-Explaining-Variable-（引入解释性变量）\"><a href=\"#Introduce-Explaining-Variable-（引入解释性变量）\" class=\"headerlink\" title=\"Introduce Explaining Variable （引入解释性变量）\"></a>Introduce Explaining Variable （引入解释性变量）</h3><ul>\n<li>将该复杂表达式（或其中一部分）的结果放进一个临时变量，以此变量名称来解释表达式用途</li>\n<li>在提取函数花费较大工作量时</li>\n</ul>\n<h3 id=\"分解临时变量\"><a href=\"#分解临时变量\" class=\"headerlink\" title=\"分解临时变量\"></a>分解临时变量</h3><ul>\n<li>针对每次赋值，创造一个独立、对应的临时变量</li>\n<li>临时变量承担多个责任</li>\n</ul>\n<h3 id=\"Remove-Assignment-to-Parameters-（移除对函数的赋值）\"><a href=\"#Remove-Assignment-to-Parameters-（移除对函数的赋值）\" class=\"headerlink\" title=\"Remove Assignment to Parameters （移除对函数的赋值）\"></a>Remove Assignment to Parameters （移除对函数的赋值）</h3><ul>\n<li>以一个临时变量取代该参数的位置</li>\n<li>Java按值传递</li>\n</ul>\n<h3 id=\"Replace-Method-with-Method-Object-（以函数对象取代函数）\"><a href=\"#Replace-Method-with-Method-Object-（以函数对象取代函数）\" class=\"headerlink\" title=\"Replace Method with Method Object （以函数对象取代函数）\"></a>Replace Method with Method Object （以函数对象取代函数）</h3><ul>\n<li>将这个函数放进一个单独对象中，如此一来局部变量就成了对象中的字段。然后可以在同一个对象中将这个大型函数分解为多个小型函数</li>\n<li>将所以局部变量变成函数对象的字段，新对象可以创造新函数。</li>\n</ul>\n<h3 id=\"Substitute-Algorithm-（替换算法）\"><a href=\"#Substitute-Algorithm-（替换算法）\" class=\"headerlink\" title=\"Substitute Algorithm （替换算法）\"></a>Substitute Algorithm （替换算法）</h3><ul>\n<li>将函数本体替换为另一个算法</li>\n</ul>\n<h2 id=\"二、在对象之间搬移特性\"><a href=\"#二、在对象之间搬移特性\" class=\"headerlink\" title=\"二、在对象之间搬移特性\"></a>二、在对象之间搬移特性</h2><hr>\n<h3 id=\"Move-Method（搬移函数）\"><a href=\"#Move-Method（搬移函数）\" class=\"headerlink\" title=\"Move Method（搬移函数）\"></a>Move Method（搬移函数）</h3><ul>\n<li>在该函数最常引用的类中建立了一个有着类似行为的新函数。将就函数编程一个单纯的委托函数，或将就函数完全移除。</li>\n<li></li>\n</ul>\n<h3 id=\"Move-Field-（搬移字段）\"><a href=\"#Move-Field-（搬移字段）\" class=\"headerlink\" title=\"Move Field （搬移字段）\"></a>Move Field （搬移字段）</h3><ul>\n<li>在目标类新建一个字段，修改源字段的所有用户，令他们改用新字段</li>\n<li></li>\n</ul>\n<h3 id=\"Extract-Class-（提炼类）\"><a href=\"#Extract-Class-（提炼类）\" class=\"headerlink\" title=\"Extract Class （提炼类）\"></a>Extract Class （提炼类）</h3><ul>\n<li>建立一个新类，将相关的字段和函数从旧类搬移到新类</li>\n</ul>\n<h3 id=\"Inline-Class（将类内联化）\"><a href=\"#Inline-Class（将类内联化）\" class=\"headerlink\" title=\"Inline Class（将类内联化）\"></a>Inline Class（将类内联化）</h3><ul>\n<li>将这个类的所有特性搬移到另一个类中，然后移除原类</li>\n</ul>\n<h3 id=\"Hide-Delegate-（隐藏委托关系）\"><a href=\"#Hide-Delegate-（隐藏委托关系）\" class=\"headerlink\" title=\"Hide Delegate （隐藏委托关系）\"></a>Hide Delegate （隐藏委托关系）</h3><ul>\n<li>在服务类上建立客户端所需的所有函数，用以委托关系</li>\n</ul>\n<h3 id=\"Remove-Middle-Man-（移除中间人）\"><a href=\"#Remove-Middle-Man-（移除中间人）\" class=\"headerlink\" title=\"Remove Middle Man （移除中间人）\"></a>Remove Middle Man （移除中间人）</h3><ul>\n<li>让客户直接调用委托类</li>\n</ul>\n<h3 id=\"Introduce-Foreign-Method-（引入外加函数）\"><a href=\"#Introduce-Foreign-Method-（引入外加函数）\" class=\"headerlink\" title=\"Introduce Foreign Method （引入外加函数）\"></a>Introduce Foreign Method （引入外加函数）</h3><ul>\n<li>在客户类中建立一个函数，并以第一参数形式传入一个服务类实例</li>\n</ul>\n<h3 id=\"Introduce-Local-Extension-（引入本地扩展）\"><a href=\"#Introduce-Local-Extension-（引入本地扩展）\" class=\"headerlink\" title=\"Introduce Local Extension （引入本地扩展）\"></a>Introduce Local Extension （引入本地扩展）</h3><ul>\n<li>建立一个新类，使他包含这些额外函数。让这个扩展品成为源类的子类或包装类</li>\n</ul>\n<h2 id=\"三、重新组织函数\"><a href=\"#三、重新组织函数\" class=\"headerlink\" title=\"##　三、重新组织函数\"></a>##　三、重新组织函数</h2><h3 id=\"Self-Encapsulate-Field-（自封装字段）\"><a href=\"#Self-Encapsulate-Field-（自封装字段）\" class=\"headerlink\" title=\"Self Encapsulate Field （自封装字段）\"></a>Self Encapsulate Field （自封装字段）</h3><ul>\n<li>为这个字段建立取值/设置函数，并且只以这些函数来访问字段</li>\n</ul>\n<h3 id=\"Replace-Data-Value-with-Object（以对象取代数据值）\"><a href=\"#Replace-Data-Value-with-Object（以对象取代数据值）\" class=\"headerlink\" title=\"Replace Data Value with Object（以对象取代数据值）\"></a>Replace Data Value with Object（以对象取代数据值）</h3><ul>\n<li>将数据项变成对象</li>\n</ul>\n<h3 id=\"Change-Value-to-Reference-（将值对象改为引用对象）\"><a href=\"#Change-Value-to-Reference-（将值对象改为引用对象）\" class=\"headerlink\" title=\"Change Value to Reference （将值对象改为引用对象）\"></a>Change Value to Reference （将值对象改为引用对象）</h3><ul>\n<li>将这个值对象编程引用对象</li>\n</ul>\n<h3 id=\"Change-Reference-to-Value-（将引用对象改为值对象）\"><a href=\"#Change-Reference-to-Value-（将引用对象改为值对象）\" class=\"headerlink\" title=\"Change Reference to Value （将引用对象改为值对象）\"></a>Change Reference to Value （将引用对象改为值对象）</h3><ul>\n<li>将它变成一个值对象</li>\n</ul>\n<h3 id=\"Replace-Array-with-Object（以对象取代数组）\"><a href=\"#Replace-Array-with-Object（以对象取代数组）\" class=\"headerlink\" title=\"Replace Array with Object（以对象取代数组）\"></a>Replace Array with Object（以对象取代数组）</h3><ul>\n<li>以对象取代数组。对数组中的每个元素，以一个字段来表示</li>\n</ul>\n<h3 id=\"Duplicate-Observed-Data（赋值被监视数据）\"><a href=\"#Duplicate-Observed-Data（赋值被监视数据）\" class=\"headerlink\" title=\"Duplicate Observed Data（赋值被监视数据）\"></a>Duplicate Observed Data（赋值被监视数据）</h3><ul>\n<li>该数据复制到一个领域对象中。建立一个Observer模式，用以同步领域对象和GUI对象内的重复数据</li>\n</ul>\n<h3 id=\"Change-Unidirectional-Association-to-Bidirectional（将单向关联改为双向关联）\"><a href=\"#Change-Unidirectional-Association-to-Bidirectional（将单向关联改为双向关联）\" class=\"headerlink\" title=\"Change Unidirectional Association to Bidirectional（将单向关联改为双向关联）\"></a>Change Unidirectional Association to Bidirectional（将单向关联改为双向关联）</h3><ul>\n<li>添加一个反向指针，并使修改函数能够同时更新两条连接</li>\n</ul>\n<h3 id=\"Change-Bidirectional-Association-to-Unidirectional（将双向关联改为单向关联）\"><a href=\"#Change-Bidirectional-Association-to-Unidirectional（将双向关联改为单向关联）\" class=\"headerlink\" title=\"Change Bidirectional Association to Unidirectional（将双向关联改为单向关联）\"></a>Change Bidirectional Association to Unidirectional（将双向关联改为单向关联）</h3><ul>\n<li>去除不必要的关联</li>\n</ul>\n<h3 id=\"Replace-Magic-Number-with-Symbolic-Constant（以字面常量取代魔法数）\"><a href=\"#Replace-Magic-Number-with-Symbolic-Constant（以字面常量取代魔法数）\" class=\"headerlink\" title=\"Replace Magic Number with Symbolic Constant（以字面常量取代魔法数）\"></a>Replace Magic Number with Symbolic Constant（以字面常量取代魔法数）</h3><ul>\n<li>创造一个常量，根据其意义为它命名，并将上述的字面数值替换为这个常量</li>\n</ul>\n<h3 id=\"Encapsulate-Field（封装字段）\"><a href=\"#Encapsulate-Field（封装字段）\" class=\"headerlink\" title=\"Encapsulate Field（封装字段）\"></a>Encapsulate Field（封装字段）</h3><ul>\n<li>将它声明为private，并提供相应的访问函数</li>\n</ul>\n<h3 id=\"Encapsulate-Collection（封装集合）\"><a href=\"#Encapsulate-Collection（封装集合）\" class=\"headerlink\" title=\"Encapsulate Collection（封装集合）\"></a>Encapsulate Collection（封装集合）</h3><ul>\n<li>让这个函数返回该集合的一个只读副本，并在这个类中提供添加/移除集合元素的函数</li>\n</ul>\n<h3 id=\"Replace-Record-with-Data-Class（以数据类取代记录）\"><a href=\"#Replace-Record-with-Data-Class（以数据类取代记录）\" class=\"headerlink\" title=\"Replace Record with Data Class（以数据类取代记录）\"></a>Replace Record with Data Class（以数据类取代记录）</h3><ul>\n<li>为该记录创建一个哑数据的对象</li>\n</ul>\n<h3 id=\"Replace-Type-Code-with-Class（以类取代类型码）\"><a href=\"#Replace-Type-Code-with-Class（以类取代类型码）\" class=\"headerlink\" title=\"Replace Type Code with  Class（以类取代类型码）\"></a>Replace Type Code with  Class（以类取代类型码）</h3><ul>\n<li>以一个新的类替换该数值类型码</li>\n</ul>\n<h3 id=\"Replace-Type-Code-with-State-Strategy（以State-Strategy取代类型码）\"><a href=\"#Replace-Type-Code-with-State-Strategy（以State-Strategy取代类型码）\" class=\"headerlink\" title=\"Replace Type Code with State/Strategy（以State/Strategy取代类型码）\"></a>Replace Type Code with State/Strategy（以State/Strategy取代类型码）</h3><ul>\n<li>以状态对象取代状态吗</li>\n</ul>\n<h3 id=\"Replace-Subclass-with-Fields（以字段取代子类）\"><a href=\"#Replace-Subclass-with-Fields（以字段取代子类）\" class=\"headerlink\" title=\"Replace Subclass with Fields（以字段取代子类）\"></a>Replace Subclass with Fields（以字段取代子类）</h3><ul>\n<li>修改这些函数，使他们返回超类中的某个（新增）字段，然后销毁子类</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"一、重新组织函数\"><a href=\"#一、重新组织函数\" class=\"headerlink\" title=\"一、重新组织函数\"></a>一、重新组织函数</h2><hr>\n<h3 id=\"Extract-Method-（提炼函数）\"><a href=\"#Extract-Method-（提炼函数）\" class=\"headerlink\" title=\"Extract Method （提炼函数）\"></a>Extract Method （提炼函数）</h3><ul>\n<li>过长函数，或需要注释才能让人理解用途的代码</li>\n<li>将这段代码放进一个独立函数中，并让函数名称解释该函数的用途。</li>\n<li>局部变量的处理</li>\n</ul>\n<h3 id=\"Inline-Method-（内联函数）\"><a href=\"#Inline-Method-（内联函数）\" class=\"headerlink\" title=\"Inline Method （内联函数）\"></a>Inline Method （内联函数）</h3><ul>\n<li>函数内部代码和函数名称清晰易读，许多不合理的函数，函数之间委托</li>\n<li>在函数调用点插入函数本体，然后移除该函数</li>\n</ul>\n<h3 id=\"Inline-Temp-（内联临时变量）\"><a href=\"#Inline-Temp-（内联临时变量）\" class=\"headerlink\" title=\"Inline Temp （内联临时变量）\"></a>Inline Temp （内联临时变量）</h3><ul>\n<li>将所有对变量的引用动作，替换为对它赋值的那个表达式自身</li>\n<li>临时变量被赋予某个函数调用的返回值，妨碍了其他的重构手法</li>\n</ul>\n<h3 id=\"Replace-Temp-with-Query-（以查询取代临时变量）\"><a href=\"#Replace-Temp-with-Query-（以查询取代临时变量）\" class=\"headerlink\" title=\"Replace Temp with Query （以查询取代临时变量）\"></a>Replace Temp with Query （以查询取代临时变量）</h3><ul>\n<li>将这个表达式提炼到一个独立函数中。将这个临时变量的所有引用点替换为对新函数的调用。伺候，新函数就可以被其他函数使用。</li>\n</ul>\n<h3 id=\"Introduce-Explaining-Variable-（引入解释性变量）\"><a href=\"#Introduce-Explaining-Variable-（引入解释性变量）\" class=\"headerlink\" title=\"Introduce Explaining Variable （引入解释性变量）\"></a>Introduce Explaining Variable （引入解释性变量）</h3><ul>\n<li>将该复杂表达式（或其中一部分）的结果放进一个临时变量，以此变量名称来解释表达式用途</li>\n<li>在提取函数花费较大工作量时</li>\n</ul>\n<h3 id=\"分解临时变量\"><a href=\"#分解临时变量\" class=\"headerlink\" title=\"分解临时变量\"></a>分解临时变量</h3><ul>\n<li>针对每次赋值，创造一个独立、对应的临时变量</li>\n<li>临时变量承担多个责任</li>\n</ul>\n<h3 id=\"Remove-Assignment-to-Parameters-（移除对函数的赋值）\"><a href=\"#Remove-Assignment-to-Parameters-（移除对函数的赋值）\" class=\"headerlink\" title=\"Remove Assignment to Parameters （移除对函数的赋值）\"></a>Remove Assignment to Parameters （移除对函数的赋值）</h3><ul>\n<li>以一个临时变量取代该参数的位置</li>\n<li>Java按值传递</li>\n</ul>\n<h3 id=\"Replace-Method-with-Method-Object-（以函数对象取代函数）\"><a href=\"#Replace-Method-with-Method-Object-（以函数对象取代函数）\" class=\"headerlink\" title=\"Replace Method with Method Object （以函数对象取代函数）\"></a>Replace Method with Method Object （以函数对象取代函数）</h3><ul>\n<li>将这个函数放进一个单独对象中，如此一来局部变量就成了对象中的字段。然后可以在同一个对象中将这个大型函数分解为多个小型函数</li>\n<li>将所以局部变量变成函数对象的字段，新对象可以创造新函数。</li>\n</ul>\n<h3 id=\"Substitute-Algorithm-（替换算法）\"><a href=\"#Substitute-Algorithm-（替换算法）\" class=\"headerlink\" title=\"Substitute Algorithm （替换算法）\"></a>Substitute Algorithm （替换算法）</h3><ul>\n<li>将函数本体替换为另一个算法</li>\n</ul>\n<h2 id=\"二、在对象之间搬移特性\"><a href=\"#二、在对象之间搬移特性\" class=\"headerlink\" title=\"二、在对象之间搬移特性\"></a>二、在对象之间搬移特性</h2><hr>\n<h3 id=\"Move-Method（搬移函数）\"><a href=\"#Move-Method（搬移函数）\" class=\"headerlink\" title=\"Move Method（搬移函数）\"></a>Move Method（搬移函数）</h3><ul>\n<li>在该函数最常引用的类中建立了一个有着类似行为的新函数。将就函数编程一个单纯的委托函数，或将就函数完全移除。</li>\n<li></li>\n</ul>\n<h3 id=\"Move-Field-（搬移字段）\"><a href=\"#Move-Field-（搬移字段）\" class=\"headerlink\" title=\"Move Field （搬移字段）\"></a>Move Field （搬移字段）</h3><ul>\n<li>在目标类新建一个字段，修改源字段的所有用户，令他们改用新字段</li>\n<li></li>\n</ul>\n<h3 id=\"Extract-Class-（提炼类）\"><a href=\"#Extract-Class-（提炼类）\" class=\"headerlink\" title=\"Extract Class （提炼类）\"></a>Extract Class （提炼类）</h3><ul>\n<li>建立一个新类，将相关的字段和函数从旧类搬移到新类</li>\n</ul>\n<h3 id=\"Inline-Class（将类内联化）\"><a href=\"#Inline-Class（将类内联化）\" class=\"headerlink\" title=\"Inline Class（将类内联化）\"></a>Inline Class（将类内联化）</h3><ul>\n<li>将这个类的所有特性搬移到另一个类中，然后移除原类</li>\n</ul>\n<h3 id=\"Hide-Delegate-（隐藏委托关系）\"><a href=\"#Hide-Delegate-（隐藏委托关系）\" class=\"headerlink\" title=\"Hide Delegate （隐藏委托关系）\"></a>Hide Delegate （隐藏委托关系）</h3><ul>\n<li>在服务类上建立客户端所需的所有函数，用以委托关系</li>\n</ul>\n<h3 id=\"Remove-Middle-Man-（移除中间人）\"><a href=\"#Remove-Middle-Man-（移除中间人）\" class=\"headerlink\" title=\"Remove Middle Man （移除中间人）\"></a>Remove Middle Man （移除中间人）</h3><ul>\n<li>让客户直接调用委托类</li>\n</ul>\n<h3 id=\"Introduce-Foreign-Method-（引入外加函数）\"><a href=\"#Introduce-Foreign-Method-（引入外加函数）\" class=\"headerlink\" title=\"Introduce Foreign Method （引入外加函数）\"></a>Introduce Foreign Method （引入外加函数）</h3><ul>\n<li>在客户类中建立一个函数，并以第一参数形式传入一个服务类实例</li>\n</ul>\n<h3 id=\"Introduce-Local-Extension-（引入本地扩展）\"><a href=\"#Introduce-Local-Extension-（引入本地扩展）\" class=\"headerlink\" title=\"Introduce Local Extension （引入本地扩展）\"></a>Introduce Local Extension （引入本地扩展）</h3><ul>\n<li>建立一个新类，使他包含这些额外函数。让这个扩展品成为源类的子类或包装类</li>\n</ul>\n<h2 id=\"三、重新组织函数\"><a href=\"#三、重新组织函数\" class=\"headerlink\" title=\"##　三、重新组织函数\"></a>##　三、重新组织函数</h2><h3 id=\"Self-Encapsulate-Field-（自封装字段）\"><a href=\"#Self-Encapsulate-Field-（自封装字段）\" class=\"headerlink\" title=\"Self Encapsulate Field （自封装字段）\"></a>Self Encapsulate Field （自封装字段）</h3><ul>\n<li>为这个字段建立取值/设置函数，并且只以这些函数来访问字段</li>\n</ul>\n<h3 id=\"Replace-Data-Value-with-Object（以对象取代数据值）\"><a href=\"#Replace-Data-Value-with-Object（以对象取代数据值）\" class=\"headerlink\" title=\"Replace Data Value with Object（以对象取代数据值）\"></a>Replace Data Value with Object（以对象取代数据值）</h3><ul>\n<li>将数据项变成对象</li>\n</ul>\n<h3 id=\"Change-Value-to-Reference-（将值对象改为引用对象）\"><a href=\"#Change-Value-to-Reference-（将值对象改为引用对象）\" class=\"headerlink\" title=\"Change Value to Reference （将值对象改为引用对象）\"></a>Change Value to Reference （将值对象改为引用对象）</h3><ul>\n<li>将这个值对象编程引用对象</li>\n</ul>\n<h3 id=\"Change-Reference-to-Value-（将引用对象改为值对象）\"><a href=\"#Change-Reference-to-Value-（将引用对象改为值对象）\" class=\"headerlink\" title=\"Change Reference to Value （将引用对象改为值对象）\"></a>Change Reference to Value （将引用对象改为值对象）</h3><ul>\n<li>将它变成一个值对象</li>\n</ul>\n<h3 id=\"Replace-Array-with-Object（以对象取代数组）\"><a href=\"#Replace-Array-with-Object（以对象取代数组）\" class=\"headerlink\" title=\"Replace Array with Object（以对象取代数组）\"></a>Replace Array with Object（以对象取代数组）</h3><ul>\n<li>以对象取代数组。对数组中的每个元素，以一个字段来表示</li>\n</ul>\n<h3 id=\"Duplicate-Observed-Data（赋值被监视数据）\"><a href=\"#Duplicate-Observed-Data（赋值被监视数据）\" class=\"headerlink\" title=\"Duplicate Observed Data（赋值被监视数据）\"></a>Duplicate Observed Data（赋值被监视数据）</h3><ul>\n<li>该数据复制到一个领域对象中。建立一个Observer模式，用以同步领域对象和GUI对象内的重复数据</li>\n</ul>\n<h3 id=\"Change-Unidirectional-Association-to-Bidirectional（将单向关联改为双向关联）\"><a href=\"#Change-Unidirectional-Association-to-Bidirectional（将单向关联改为双向关联）\" class=\"headerlink\" title=\"Change Unidirectional Association to Bidirectional（将单向关联改为双向关联）\"></a>Change Unidirectional Association to Bidirectional（将单向关联改为双向关联）</h3><ul>\n<li>添加一个反向指针，并使修改函数能够同时更新两条连接</li>\n</ul>\n<h3 id=\"Change-Bidirectional-Association-to-Unidirectional（将双向关联改为单向关联）\"><a href=\"#Change-Bidirectional-Association-to-Unidirectional（将双向关联改为单向关联）\" class=\"headerlink\" title=\"Change Bidirectional Association to Unidirectional（将双向关联改为单向关联）\"></a>Change Bidirectional Association to Unidirectional（将双向关联改为单向关联）</h3><ul>\n<li>去除不必要的关联</li>\n</ul>\n<h3 id=\"Replace-Magic-Number-with-Symbolic-Constant（以字面常量取代魔法数）\"><a href=\"#Replace-Magic-Number-with-Symbolic-Constant（以字面常量取代魔法数）\" class=\"headerlink\" title=\"Replace Magic Number with Symbolic Constant（以字面常量取代魔法数）\"></a>Replace Magic Number with Symbolic Constant（以字面常量取代魔法数）</h3><ul>\n<li>创造一个常量，根据其意义为它命名，并将上述的字面数值替换为这个常量</li>\n</ul>\n<h3 id=\"Encapsulate-Field（封装字段）\"><a href=\"#Encapsulate-Field（封装字段）\" class=\"headerlink\" title=\"Encapsulate Field（封装字段）\"></a>Encapsulate Field（封装字段）</h3><ul>\n<li>将它声明为private，并提供相应的访问函数</li>\n</ul>\n<h3 id=\"Encapsulate-Collection（封装集合）\"><a href=\"#Encapsulate-Collection（封装集合）\" class=\"headerlink\" title=\"Encapsulate Collection（封装集合）\"></a>Encapsulate Collection（封装集合）</h3><ul>\n<li>让这个函数返回该集合的一个只读副本，并在这个类中提供添加/移除集合元素的函数</li>\n</ul>\n<h3 id=\"Replace-Record-with-Data-Class（以数据类取代记录）\"><a href=\"#Replace-Record-with-Data-Class（以数据类取代记录）\" class=\"headerlink\" title=\"Replace Record with Data Class（以数据类取代记录）\"></a>Replace Record with Data Class（以数据类取代记录）</h3><ul>\n<li>为该记录创建一个哑数据的对象</li>\n</ul>\n<h3 id=\"Replace-Type-Code-with-Class（以类取代类型码）\"><a href=\"#Replace-Type-Code-with-Class（以类取代类型码）\" class=\"headerlink\" title=\"Replace Type Code with  Class（以类取代类型码）\"></a>Replace Type Code with  Class（以类取代类型码）</h3><ul>\n<li>以一个新的类替换该数值类型码</li>\n</ul>\n<h3 id=\"Replace-Type-Code-with-State-Strategy（以State-Strategy取代类型码）\"><a href=\"#Replace-Type-Code-with-State-Strategy（以State-Strategy取代类型码）\" class=\"headerlink\" title=\"Replace Type Code with State/Strategy（以State/Strategy取代类型码）\"></a>Replace Type Code with State/Strategy（以State/Strategy取代类型码）</h3><ul>\n<li>以状态对象取代状态吗</li>\n</ul>\n<h3 id=\"Replace-Subclass-with-Fields（以字段取代子类）\"><a href=\"#Replace-Subclass-with-Fields（以字段取代子类）\" class=\"headerlink\" title=\"Replace Subclass with Fields（以字段取代子类）\"></a>Replace Subclass with Fields（以字段取代子类）</h3><ul>\n<li>修改这些函数，使他们返回超类中的某个（新增）字段，然后销毁子类</li>\n</ul>\n"},{"title":"'初识重构'","date":"2016-12-12T11:51:33.000Z","_content":"\n### 定义\n* 名称：\n对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。\n\n* 动词：\n使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。\n\n\n### 原则\n\n* 事不过三，三则重构\n* 添加功能时重构\n* 修补错误时重构\n* 复审代码时重构\n\n#### 小步前进，频繁测试\n\n","source":"_posts/初识重构.md","raw":"---\ntitle: '''初识重构'''\ndate: 2016-12-12 19:51:33\ntags:\n---\n\n### 定义\n* 名称：\n对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。\n\n* 动词：\n使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。\n\n\n### 原则\n\n* 事不过三，三则重构\n* 添加功能时重构\n* 修补错误时重构\n* 复审代码时重构\n\n#### 小步前进，频繁测试\n\n","slug":"初识重构","published":1,"updated":"2016-12-12T12:32:34.797Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwm7oy8v00058su90avwu0wt","content":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li><p>名称：<br>对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。</p>\n</li>\n<li><p>动词：<br>使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。</p>\n</li>\n</ul>\n<h3 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h3><ul>\n<li>事不过三，三则重构</li>\n<li>添加功能时重构</li>\n<li>修补错误时重构</li>\n<li>复审代码时重构</li>\n</ul>\n<h4 id=\"小步前进，频繁测试\"><a href=\"#小步前进，频繁测试\" class=\"headerlink\" title=\"小步前进，频繁测试\"></a>小步前进，频繁测试</h4>","excerpt":"","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li><p>名称：<br>对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。</p>\n</li>\n<li><p>动词：<br>使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。</p>\n</li>\n</ul>\n<h3 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h3><ul>\n<li>事不过三，三则重构</li>\n<li>添加功能时重构</li>\n<li>修补错误时重构</li>\n<li>复审代码时重构</li>\n</ul>\n<h4 id=\"小步前进，频繁测试\"><a href=\"#小步前进，频繁测试\" class=\"headerlink\" title=\"小步前进，频繁测试\"></a>小步前进，频繁测试</h4>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciwm7oy6p00008su9ulmje7np","tag_id":"ciwm7oy7v00028su9rie9eljl","_id":"ciwm7oy8y00068su9qx298zb2"}],"Tag":[{"name":"demo","_id":"ciwm7oy7v00028su9rie9eljl"}]}}